axios.defaults.headers.common["X-CSRF-TOKEN"]=document.querySelector('meta[name="csrf-token"]').getAttribute("content");let productos=[];let currentPage=1;let totalPages=1;const formatPrice=price=>new Intl.NumberFormat("es-ES",{style:"currency",currency:"EUR"}).format(price);const formatDate=date=>new Date(date).toLocaleDateString("es-ES",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit"});const cargarProductos=async(page=1)=>{try{const response=await axios.get(`/admin/inventario?page=${page}`);productos=response.data.data;totalPages=response.data.last_page;currentPage=response.data.current_page;const tbody=document.querySelector("#productosTable tbody");if(!tbody){console.error("No se encontró la tabla de productos");return}renderizarTabla();renderizarPaginacion()}catch(error){console.error("Error al cargar productos:",error);mostrarError("Error al cargar los productos. Por favor, intenta recargar la página.")}};const actualizarStock=async(id,stock)=>{try{await axios.put(`/admin/inventario/${id}/stock`,{stock:stock});await cargarProductos(currentPage);mostrarExito("Stock actualizado correctamente")}catch(error){console.error("Error al actualizar stock:",error);mostrarError("Error al actualizar el stock. Por favor, intenta de nuevo.")}};const editarStock=(id,stockActual)=>{document.getElementById("producto_id").value=id;document.getElementById("stock").value=stockActual;document.getElementById("editarStockModal").classList.remove("hidden")};const cerrarModalEditarStock=()=>{document.getElementById("editarStockModal").classList.add("hidden")};const guardarStock=async()=>{const id=document.getElementById("producto_id").value;const stock=document.getElementById("stock").value;if(stock<0){mostrarError("El stock no puede ser negativo");return}await actualizarStock(id,stock);cerrarModalEditarStock()};const verDetalles=async id=>{try{const response=await axios.get(`/admin/inventario/${id}`);if(response.data){const producto=response.data;mostrarModalDetalles(producto)}else{throw new Error("No se recibieron datos del producto")}}catch(error){console.error("Error al cargar detalles:",error);if(error.response){console.error("Respuesta del servidor:",error.response.data);console.error("Estado:",error.response.status)}mostrarError("Error al cargar los detalles del producto. Por favor, intenta de nuevo.")}};const renderizarTabla=()=>{const tbody=document.querySelector("#productosTable tbody");if(!tbody){console.error("No se encontró el cuerpo de la tabla");return}tbody.innerHTML=productos.map((producto=>`\n        <tr class="hover:bg-[#F3C71E] hover:bg-opacity-5 transition-colors">\n            <td class="px-6 py-4 whitespace-nowrap text-white dark:text-white">${producto.id}</td>\n            <td class="px-6 py-4 whitespace-nowrap text-white dark:text-white">${producto.nombre}</td>\n            <td class="px-6 py-4 whitespace-nowrap text-white dark:text-white">\n                ${producto.subcategoria?`${producto.subcategoria.categoria.nombre} > ${producto.subcategoria.nombre}`:'<span class="text-gray-400">Sin categoría</span>'}\n            </td>\n            <td class="px-6 py-4 text-center">\n                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                    ${producto.stock>5?"bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-400":producto.stock>0?"bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-400":"bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-400"}">\n                    ${producto.stock}\n                </span>\n            </td>\n            <td class="px-6 py-4 text-center text-white dark:text-white">\n                ${formatPrice(producto.precio)}\n            </td>\n            <td class="px-6 py-4 text-center text-white dark:text-white">\n                ${producto.total_vendido||0}\n            </td>\n            <td class="px-6 py-4 text-center">\n                <div class="flex justify-center space-x-2">\n                    <button onclick="editarStock(${producto.id}, ${producto.stock})" \n                            class="p-2 rounded-full text-white transition-colors duration-200"\n                            title="Editar Stock">\n                        <i class="fas fa-edit"></i>\n                    </button>\n                    <button onclick="verDetalles(${producto.id})"\n                            class="p-2 rounded-full text-white transition-colors duration-200"\n                            title="Ver Detalles">\n                        <i class="fas fa-eye"></i>\n                    </button>\n                </div>\n            </td>\n        </tr>\n    `)).join("")};const renderizarPaginacion=()=>{const paginacion=document.getElementById("paginacion");if(!paginacion){console.error("No se encontró el contenedor de paginación");return}if(totalPages<=1){paginacion.style.display="none";return}paginacion.style.display="block";let html='<div class="flex justify-center space-x-2">';html+=`\n        <button onclick="cambiarPagina(${currentPage-1})" \n                class="px-3 py-1 rounded-lg ${currentPage===1?"bg-gray-200 text-gray-500 cursor-not-allowed":"bg-[#F3C71E] text-white hover:bg-[#f4cf3c]"} transition-colors"\n                ${currentPage===1?"disabled":""}>\n            Anterior\n        </button>\n    `;for(let i=1;i<=totalPages;i++){html+=`\n            <button onclick="cambiarPagina(${i})" \n                    class="px-3 py-1 rounded-lg ${currentPage===i?"bg-[#F3C71E] text-white":"bg-gray-200 text-gray-700 hover:bg-gray-300"} transition-colors">\n                ${i}\n            </button>\n        `}html+=`\n        <button onclick="cambiarPagina(${currentPage+1})" \n                class="px-3 py-1 rounded-lg ${currentPage===totalPages?"bg-gray-200 text-gray-500 cursor-not-allowed":"bg-[#F3C71E] text-white hover:bg-[#f4cf3c]"} transition-colors"\n                ${currentPage===totalPages?"disabled":""}>\n            Siguiente\n        </button>\n    `;html+="</div>";paginacion.innerHTML=html};const mostrarModalDetalles=producto=>{const modal=document.getElementById("modalDetalles");const contenido=document.getElementById("modalDetallesContenido");if(!modal||!contenido){console.error("No se encontró el modal de detalles");return}let ingredientes=[];try{if(producto.ingredientes){ingredientes=JSON.parse(producto.ingredientes)}}catch(e){console.error("Error al parsear ingredientes:",e)}contenido.innerHTML=`\n        <div class="p-6">\n            <div class="flex flex-col md:flex-row gap-6 mb-6">\n                <div class="md:w-1/3">\n                    <img src="${producto.imagen_url}" alt="${producto.nombre}" class="w-full rounded-lg object-cover">\n                </div>\n                <div class="md:w-2/3">\n                    <h3 class="text-2xl font-bold text-white mb-4">${producto.nombre}</h3>\n                    <p class="text-gray-200 mb-4">${producto.descripcion||"Sin descripción"}</p>\n                    <p class="text-2xl font-bold text-white mb-4">${formatPrice(producto.precio)}</p>\n                    \n                    ${ingredientes.length>0?`\n                        <div class="mb-4">\n                            <h4 class="font-semibold text-white mb-2">Ingredientes:</h4>\n                            <ul class="list-disc list-inside text-gray-200">\n                                ${ingredientes.map((ing=>`<li>${ing}</li>`)).join("")}\n                            </ul>\n                        </div>\n                    `:""}\n                </div>\n            </div>\n\n            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">\n                <div>\n                    <h4 class="font-semibold text-white mb-4">Información del Producto</h4>\n                    <table class="w-full">\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">ID</th>\n                            <td class="py-2 text-white">${producto.id}</td>\n                        </tr>\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Categoría</th>\n                            <td class="py-2 text-white">${producto.subcategoria?`${producto.subcategoria.categoria.nombre} > ${producto.subcategoria.nombre}`:"Sin categoría"}</td>\n                        </tr>\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Stock</th>\n                            <td class="py-2 text-white">\n                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                                    ${producto.stock>5?"bg-green-100 text-green-800":producto.stock>0?"bg-yellow-100 text-yellow-800":"bg-red-100 text-red-800"}">\n                                    ${producto.stock}\n                                </span>\n                            </td>\n                        </tr>\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Fecha de Creación</th>\n                            <td class="py-2 text-white">${formatDate(producto.created_at)}</td>\n                        </tr>\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Última Actualización</th>\n                            <td class="py-2 text-white">${formatDate(producto.updated_at)}</td>\n                        </tr>\n                    </table>\n                </div>\n                <div>\n                    <h4 class="font-semibold text-white mb-4">Estadísticas de Ventas</h4>\n                    <table class="w-full">\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Total Vendido</th>\n                            <td class="py-2 text-white">${producto.total_vendido||0} unidades</td>\n                        </tr>\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Última Venta</th>\n                            <td class="py-2 text-white">${producto.ultima_venta?formatDate(producto.ultima_venta):"Nunca"}</td>\n                        </tr>\n                        <tr class="border-b border-gray-200">\n                            <th class="py-2 text-left text-gray-200">Ingresos Totales</th>\n                            <td class="py-2 text-white">${formatPrice(producto.precio*(producto.total_vendido||0))}</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        </div>\n    `;modal.classList.remove("hidden")};const cerrarModalDetalles=()=>{const modal=document.getElementById("modalDetalles");modal.classList.add("hidden")};const mostrarError=mensaje=>{const alertContainer=document.getElementById("alert-container");if(!alertContainer){console.error("No se encontró el contenedor de alertas");return}alertContainer.innerHTML=`\n        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">\n            <span class="block sm:inline">${mensaje}</span>\n        </div>\n    `;setTimeout((()=>{alertContainer.innerHTML=""}),5e3)};const mostrarExito=mensaje=>{const alertContainer=document.getElementById("alert-container");if(!alertContainer){console.error("No se encontró el contenedor de alertas");return}alertContainer.innerHTML=`\n        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">\n            <span class="block sm:inline">${mensaje}</span>\n        </div>\n    `;setTimeout((()=>{alertContainer.innerHTML=""}),5e3)};document.addEventListener("DOMContentLoaded",(()=>{const tbody=document.querySelector("#productosTable tbody");if(!tbody){console.error("No se encontró la tabla de productos");return}cargarProductos();const modalDetalles=document.getElementById("modalDetalles");modalDetalles.addEventListener("click",(e=>{if(e.target===modalDetalles){cerrarModalDetalles()}}));const modalEditarStock=document.getElementById("editarStockModal");modalEditarStock.addEventListener("click",(e=>{if(e.target===modalEditarStock){cerrarModalEditarStock()}}));const stockInput=document.getElementById("stock");if(stockInput){stockInput.addEventListener("keypress",(e=>{if(e.key==="Enter"){e.preventDefault();guardarStock()}}))}}));window.cambiarPagina=page=>{if(page>=1&&page<=totalPages){cargarProductos(page)}};window.cerrarModalDetalles=cerrarModalDetalles;window.cerrarModalEditarStock=cerrarModalEditarStock;window.cargarProductos=cargarProductos;window.cambiarPagina=cambiarPagina;window.editarStock=editarStock;window.guardarStock=guardarStock;window.verDetalles=verDetalles;window.cerrarModalDetalles=cerrarModalDetalles;window.cerrarModalEditarStock=cerrarModalEditarStock;document.addEventListener("DOMContentLoaded",(()=>{cargarProductos()}));